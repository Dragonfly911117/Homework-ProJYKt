name: Build

#on:
#  push:
#    tags:
#      - "v*"

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build Binaries
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            pyinstaller -F hwp.py --distpath ${{ runner.os }}-Release
            tar -czvf ${{ runner.os }}-Release.tar.gz ${{ runner.os }}-Release
          elif [ "$RUNNER_OS" == "Windows" ]; then
            pyinstaller -F hwp.py --distpath ${{ runner.os }}-Release
            tar -czvf ${{ runner.os }}-Release.zip ${{ runner.os }}-Release
          elif [ "$RUNNER_OS" == "macOS" ]; then
            pyinstaller -F hwp.py --distpath ${{ runner.os }}-Release
            tar -czvf ${{ runner.os }}-Release.tar.gz ${{ runner.os }}-Release
          fi
        shell: bash

        #- name: Upload Artifact
        #  uses: actions/upload-artifact@v2
        #  with:
        #    name: python-binary
        #    path: ./-release

        #- name: Download Artifact
        #  uses: actions/download-artifact@v1
        #  with:
        #    name: python-binary
        #    path: ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Testing
        run: |
          echo ${{ runner.os }}
          ls -la

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ runner.os }}-Release.*
          asset_name: ${{ runner.os }}-Release
          asset_content_type: application/octet-stream
